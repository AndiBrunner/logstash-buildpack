filter {
  grok {
    patterns_dir => "{{ .Env.HOME }}/grok-patterns"
    match => { "message" => "%{CFPREFIX}%{GREEDYDATA:message}" }
    add_tag => [ "CF","CF-%{syslog5424_proc}","_grokked"]
    add_field => { "format" => "cf" }
    tag_on_failure => [ ]
    overwrite => [ "message" ]
  }

  if [syslog5424_proc] =~ /(A[Pp]{2}.+)/ {
     mutate { add_tag => ["CF-APP"] }
     mutate { remove_tag => ["_grokked"] }
  }

  if ("CF-[RTR]" in [tags]) {
    grok {
      patterns_dir => "{{ .Env.HOME }}/grok-patterns"
      match => { "message" => "%{RTRPATTERN}%{GREEDYDATA:dataleft}" }
      add_tag => [ "gorouter"]
      tag_on_failure => []
    }
  }

  if ("CF-APP" in [tags]) or !("CF" in [tags]) { #HERE WE PARSE CLIENT LOGS
    grok {
      patterns_dir => "{{ .Env.HOME }}/grok-patterns"
      match => { "message" => "%{SYSLOG3164}" }
      add_tag => ["syslog3164","_grokked" ]
      tag_on_failure => []
      break_on_match => true
    }

    if [message] =~ /^{.*}/ { #TO BE OPTIMIZED
      json {
         source => "message"
         add_tag => [ "json", "_grokked"]
      }
    } else {
      grok {
        match => { "message" => [
          "(?<datetime>%{YEAR}[/]%{MONTHNUM}[/]%{MONTHDAY} %{TIME}) %{WORD:severity}[ ]+message %{UUID} \(%{POSINT:size:int} bytes\) from <%{NOTSPACE:from}> to <%{NOTSPACE:to}> %{GREEDYDATA:message}",
          "(?<datetime>%{YEAR}[/]%{MONTHNUM}[/]%{MONTHDAY} %{TIME}) %{WORD:severity}[ ]+%{GREEDYDATA:message}"
        ] }
        overwrite => "message"
      }
      date {
        match => [ "datetime", "yyyy/MM/dd HH:mm:ss" ]
      }
      mutate {
       remove_field => [ "datetime" ]
      }
    }
  }
  if !("_grokked" in [tags]) {
    mutate{
      add_tag => [ "_ungrokked" ]
    }
  }
}
